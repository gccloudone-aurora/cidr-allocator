apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cidr-allocator.fullname" . }}
  labels: {{- include "cidr-allocator.labels" . | nindent 4 }}
spec:
  {{- if .Values.leaderElectionEnabled }}
  replicas: {{ .Values.replicaCount }}
  {{- else }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      {{- include "cidr-allocator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels: {{- include "cidr-allocator.selectorLabels" . | nindent 8 }}
    spec:
      hostNetwork: true
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cidr-allocator.serviceAccountName" . }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if and .Values.prometheus.enabled (or .Values.prometheus.servicemonitor.enabled .Values.prometheus.podmonitor.enabled)}}
          ports:
          - name: http-metrics
            containerPort: {{ default 9003 .Values.prometheus.servicemonitor.targetPort }}
            protocol: TCP
          {{- end }}
          command:
            - /nodecidrallocator
          args:
          {{- if .Values.leaderElectionEnabled }}
          - --leader-elect
          {{- end }}
          - --metrics-bind-address
          - ":9003"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 10
            successThreshold: 1
            timeoutSeconds: 2
          {{- if .Values.envVars }}
          env: {{- toYaml .Values.envVars | nindent 12 }}
          {{- end }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
      terminationGracePeriodSeconds: 10
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
